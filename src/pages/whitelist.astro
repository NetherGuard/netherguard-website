---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout title="Whitelist Generator - NetherGuard" description="Generate secure Minecraft whitelists with UUID validation. Bulk import, export multiple formats.">
  <!-- Hero Section -->
  <section class="section-spacing bg-gradient-to-br from-obsidian-900 via-zinc-900/20 to-obsidian-900">
    <div class="container">
      <div class="max-w-4xl mx-auto text-center mb-12">
        <div class="text-sm text-zinc-500 font-mono mb-4">~/whitelist-generator</div>
        <h1 class="text-5xl md:text-6xl font-bold text-white mb-6 leading-tight">
          Whitelist <span class="text-white">Generator</span>
        </h1>
        <p class="text-xl text-zinc-400 max-w-2xl mx-auto leading-relaxed">
          Create secure access control lists with automatic UUID validation. 
          Supports bulk import and multiple export formats for maximum compatibility.
        </p>
      </div>
    </div>
  </section>

  <!-- Generator Section -->
  <section class="section-spacing bg-obsidian-800">
    <div class="container">
      <div class="max-w-4xl mx-auto space-y-12">
        
        <!-- Add Players -->
        <div>
          <h2 class="text-2xl font-bold text-white mb-6">Add Players</h2>
          <div class="bg-obsidian-700/50 border border-zinc-800 rounded-xl p-6">
            
            <!-- Single Player Input -->
            <div class="space-y-4 mb-6">
              <div class="flex gap-4">
                <input 
                  id="usernameInput"
                  type="text" 
                  placeholder="Enter Minecraft username"
                  class="flex-1 px-4 py-3 bg-obsidian-900 border border-zinc-700 rounded-lg text-white placeholder-zinc-500 focus:border-white focus:outline-none transition-colors"
                />
                <button 
                  id="addPlayerBtn"
                  class="px-6 py-3 bg-white hover:bg-zinc-200 text-black rounded-lg font-semibold transition-all duration-200 hover:scale-105 whitespace-nowrap"
                >
                  Add Player
                </button>
              </div>
            </div>

            <!-- Bulk Import -->
            <div class="border-t border-zinc-700 pt-6">
              <h3 class="text-lg font-semibold text-white mb-4">Bulk Import</h3>
              <div class="space-y-4">
                <textarea 
                  id="bulkInput"
                  placeholder="Paste usernames here (one per line)&#10;Example:&#10;Notch&#10;jeb_&#10;Dinnerbone"
                  rows="6"
                  class="w-full px-4 py-3 bg-obsidian-900 border border-zinc-700 rounded-lg text-white placeholder-zinc-500 focus:border-white focus:outline-none transition-colors resize-none"
                ></textarea>
                <div class="flex gap-4">
                  <button 
                    id="bulkAddBtn"
                    class="px-6 py-3 bg-white/10 border border-white/20 hover:bg-white/20 text-white rounded-lg font-semibold transition-all duration-200 hover:scale-105"
                  >
                    Import All
                  </button>
                  <label class="px-6 py-3 bg-white/10 border border-white/20 hover:bg-white/20 text-white rounded-lg font-semibold transition-all duration-200 hover:scale-105 cursor-pointer">
                    Upload File
                    <input type="file" accept=".txt,.csv" class="hidden" id="fileInput"/>
                  </label>
                </div>
              </div>
            </div>

          </div>
        </div>

        <!-- Players List -->
        <div>
          <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl font-bold text-white">Players List</h2>
            <div class="flex gap-2">
              <button 
                id="clearAllBtn"
                class="px-4 py-2 bg-red-600/20 border border-red-500/30 hover:bg-red-600/30 text-red-300 rounded-lg text-sm font-medium transition-colors"
              >
                Clear All
              </button>
              <span id="playerCount" class="px-4 py-2 bg-white/10 text-zinc-300 rounded-lg text-sm font-medium">
                0 players
              </span>
            </div>
          </div>

          <div class="bg-obsidian-700/50 border border-zinc-800 rounded-xl p-6 min-h-[200px]">
            <div id="playersList" class="space-y-3">
              <div class="text-center text-zinc-500 py-8">
                No players added yet. Start by adding a username above.
              </div>
            </div>
          </div>
        </div>

        <!-- Export Section -->
        <div>
          <h2 class="text-2xl font-bold text-white mb-6">Export Whitelist</h2>
          <div class="bg-obsidian-700/50 border border-zinc-800 rounded-xl p-6">
            
            <div class="grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6">
              <button 
                id="exportJson"
                class="px-6 py-3 bg-white hover:bg-zinc-200 text-black rounded-lg font-semibold transition-all duration-200 hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed"
                disabled
              >
                Export JSON
              </button>
              <button 
                id="exportYaml"
                class="px-6 py-3 bg-white/10 border border-white/20 hover:bg-white/20 text-white rounded-lg font-semibold transition-all duration-200 hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed"
                disabled
              >
                Export YAML
              </button>
              <button 
                id="exportTxt"
                class="px-6 py-3 bg-white/10 border border-white/20 hover:bg-white/20 text-white rounded-lg font-semibold transition-all duration-200 hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed"
                disabled
              >
                Export TXT
              </button>
            </div>

            <!-- Preview -->
            <div class="bg-obsidian-900 border border-zinc-700 rounded-lg p-4 font-mono text-sm max-h-[300px] overflow-y-auto">
              <div id="previewContent" class="text-zinc-500">
                Add players to see whitelist preview
              </div>
            </div>

          </div>
        </div>

      </div>
    </div>
  </section>

  <!-- Toast Container -->
  <div id="toastContainer" class="fixed top-4 right-4 z-50 space-y-2"></div>

  <!-- How it Works -->
  <section class="section-spacing bg-obsidian-900">
    <div class="container">
      <div class="max-w-4xl mx-auto">
        <h2 class="text-3xl font-bold text-white text-center mb-12">How it Works</h2>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          <div class="text-center">
            <div class="w-16 h-16 bg-white/10 rounded-xl flex items-center justify-center mx-auto mb-4">
              <span class="text-2xl font-bold text-white">1</span>
            </div>
            <h3 class="text-xl font-bold text-white mb-2">Add Players</h3>
            <p class="text-zinc-400">Enter usernames manually or import from files. Each username is validated against Minecraft's database.</p>
          </div>
          
          <div class="text-center">
            <div class="w-16 h-16 bg-white/10 rounded-xl flex items-center justify-center mx-auto mb-4">
              <span class="text-2xl font-bold text-white">2</span>
            </div>
            <h3 class="text-xl font-bold text-white mb-2">UUID Resolution</h3>
            <p class="text-zinc-400">Usernames are automatically converted to UUIDs using multiple APIs for maximum reliability.</p>
          </div>
          
          <div class="text-center">
            <div class="w-16 h-16 bg-white/10 rounded-xl flex items-center justify-center mx-auto mb-4">
              <span class="text-2xl font-bold text-white">3</span>
            </div>
            <h3 class="text-xl font-bold text-white mb-2">Export & Use</h3>
            <p class="text-zinc-400">Download in your preferred format and upload directly to your Minecraft server.</p>
          </div>
        </div>
      </div>
    </div>
  </section>
</BaseLayout>

<script is:inline>
  // Variables globales
  var playersList = [];
  var isProcessing = false;

  // Función para validar username
  function isValidMinecraftUsername(username) {
    return /^[a-zA-Z0-9_]{1,16}$/.test(username);
  }

  // Función para obtener UUID - Version simplificada
  async function getPlayerUUID(username) {
    if (!isValidMinecraftUsername(username)) return null;

    try {
      // Probar MineTools API
      var response = await fetch('https://api.minetools.eu/uuid/' + username);
      if (response.ok) {
        var data = await response.json();
        if (data.status === 'OK') {
          return { username: data.name, uuid: data.id };
        }
      }
    } catch (e) {
      console.warn('MineTools API failed:', e);
    }

    try {
      // Probar PlayerDB API
      var response = await fetch('https://playerdb.co/api/player/minecraft/' + username);
      if (response.ok) {
        var data = await response.json();
        if (data.success) {
          return { 
            username: data.data.player.username, 
            uuid: data.data.player.id 
          };
        }
      }
    } catch (e) {
      console.warn('PlayerDB API failed:', e);
    }

    return null;
  }

  // Función para mostrar notificaciones
  function showToast(message, type) {
    var container = document.getElementById('toastContainer');
    var toast = document.createElement('div');
    
    var bgClass = type === 'success' ? 'bg-green-600/20 border-green-500/30' : 
                  type === 'error' ? 'bg-red-600/20 border-red-500/30' : 
                  'bg-white/20 border-white/30';
    
    toast.className = 'px-4 py-3 rounded-lg border text-white text-sm font-medium shadow-lg transform transition-all duration-300 translate-x-full ' + bgClass;
    toast.textContent = message;
    
    container.appendChild(toast);
    
    setTimeout(function() { toast.classList.remove('translate-x-full'); }, 10);
    setTimeout(function() {
      toast.classList.add('translate-x-full');
      setTimeout(function() { 
        if (container.contains(toast)) container.removeChild(toast); 
      }, 300);
    }, 3000);
  }

  // Función para actualizar la interfaz
  function updateInterface() {
    var countEl = document.getElementById('playerCount');
    var listEl = document.getElementById('playersList');
    var previewEl = document.getElementById('previewContent');
    
    // Actualizar contador
    countEl.textContent = playersList.length + ' player' + (playersList.length !== 1 ? 's' : '');
    
    // Actualizar lista
    if (playersList.length === 0) {
      listEl.innerHTML = '<div class="text-center text-zinc-500 py-8">No players added yet. Start by adding a username above.</div>';
    } else {
      var html = '';
      for (var i = 0; i < playersList.length; i++) {
        var player = playersList[i];
        html += '<div class="flex items-center justify-between p-4 bg-obsidian-800 rounded-lg">';
        html += '<div class="flex items-center gap-4">';
        html += '<div class="w-10 h-10 bg-white/10 rounded-lg flex items-center justify-center">';
        html += '<span class="text-white font-mono text-sm">' + player.username[0].toUpperCase() + '</span>';
        html += '</div>';
        html += '<div>';
        html += '<div class="text-white font-medium">' + player.username + '</div>';
        html += '<div class="text-zinc-400 text-sm font-mono">' + player.uuid + '</div>';
        html += '</div>';
        html += '</div>';
        html += '<button onclick="removePlayer(' + i + ')" class="text-red-400 hover:text-red-300 p-2 rounded-lg hover:bg-red-500/10 transition-colors">✕</button>';
        html += '</div>';
      }
      listEl.innerHTML = html;
    }

    // Actualizar botones de exportación
    var buttons = ['exportJson', 'exportYaml', 'exportTxt'];
    for (var i = 0; i < buttons.length; i++) {
      document.getElementById(buttons[i]).disabled = playersList.length === 0;
    }

    // Actualizar preview
    if (playersList.length === 0) {
      previewEl.innerHTML = '<span class="text-zinc-500">Add players to see whitelist preview</span>';
    } else {
      var preview = '<span class="text-blue-400">[</span>\n';
      for (var i = 0; i < playersList.length; i++) {
        var p = playersList[i];
        preview += '  <span class="text-white">{</span>\n';
        preview += '    <span class="text-green-400">"uuid"</span><span class="text-white">:</span> <span class="text-yellow-400">"' + p.uuid + '"</span><span class="text-white">,</span>\n';
        preview += '    <span class="text-green-400">"name"</span><span class="text-white">:</span> <span class="text-yellow-400">"' + p.username + '"</span>\n';
        preview += '  <span class="text-white">}</span>';
        if (i < playersList.length - 1) preview += ',';
        preview += '\n';
      }
      preview += '<span class="text-blue-400">]</span>';
      previewEl.innerHTML = preview;
    }
  }

  // Función para añadir un jugador
  async function addPlayer() {
    if (isProcessing) return;
    
    var input = document.getElementById('usernameInput');
    var btn = document.getElementById('addPlayerBtn');
    var username = input.value.trim();
    
    if (!username) return;

    // Verificar si ya existe
    for (var i = 0; i < playersList.length; i++) {
      if (playersList[i].username.toLowerCase() === username.toLowerCase()) {
        showToast('Player already exists', 'error');
        return;
      }
    }

    isProcessing = true;
    btn.disabled = true;
    btn.textContent = 'Loading...';

    var playerData = await getPlayerUUID(username);
    
    if (playerData) {
      playersList.push(playerData);
      input.value = '';
      updateInterface();
      showToast('Added ' + playerData.username, 'success');
    } else {
      showToast('Player not found', 'error');
    }

    isProcessing = false;
    btn.disabled = false;
    btn.textContent = 'Add Player';
  }

  // Función para añadir múltiples jugadores
  async function bulkAdd() {
    if (isProcessing) return;
    
    var textarea = document.getElementById('bulkInput');
    var btn = document.getElementById('bulkAddBtn');
    var text = textarea.value.trim();
    
    if (!text) {
      showToast('No usernames to import', 'error');
      return;
    }

    var usernames = text.split('\n');
    var validUsernames = [];
    
    for (var i = 0; i < usernames.length; i++) {
      var u = usernames[i].trim();
      if (u) validUsernames.push(u);
    }

    if (validUsernames.length === 0) {
      showToast('No valid usernames found', 'error');
      return;
    }

    isProcessing = true;
    btn.disabled = true;
    btn.textContent = 'Importing...';

    var added = 0;
    for (var i = 0; i < validUsernames.length; i++) {
      var username = validUsernames[i];
      
      // Verificar si ya existe
      var exists = false;
      for (var j = 0; j < playersList.length; j++) {
        if (playersList[j].username.toLowerCase() === username.toLowerCase()) {
          exists = true;
          break;
        }
      }
      
      if (!exists) {
        var playerData = await getPlayerUUID(username);
        if (playerData) {
          playersList.push(playerData);
          added++;
        }
        // Pequeña pausa para evitar rate limiting
        await new Promise(function(resolve) { setTimeout(resolve, 200); });
      }
    }

    textarea.value = '';
    updateInterface();
    showToast('Added ' + added + ' players', 'success');

    isProcessing = false;
    btn.disabled = false;
    btn.textContent = 'Import All';
  }

  // Función para remover jugador
  function removePlayer(index) {
    playersList.splice(index, 1);
    updateInterface();
    showToast('Player removed', 'success');
  }

  // Función para limpiar todo
  function clearAll() {
    playersList = [];
    updateInterface();
    showToast('All players cleared', 'success');
  }

  // Función para exportar
  function exportData(format) {
    if (playersList.length === 0) return;

    var content = '';
    var filename = '';
    var mimeType = '';

    if (format === 'json') {
      var jsonData = [];
      for (var i = 0; i < playersList.length; i++) {
        jsonData.push({ uuid: playersList[i].uuid, name: playersList[i].username });
      }
      content = JSON.stringify(jsonData, null, 2);
      filename = 'whitelist.json';
      mimeType = 'application/json';
    } else if (format === 'yaml') {
      content = '';
      for (var i = 0; i < playersList.length; i++) {
        content += '- uuid: "' + playersList[i].uuid + '"\n  name: "' + playersList[i].username + '"\n';
      }
      filename = 'whitelist.yml';
      mimeType = 'text/yaml';
    } else if (format === 'txt') {
      content = '';
      for (var i = 0; i < playersList.length; i++) {
        content += playersList[i].username + ' (' + playersList[i].uuid + ')\n';
      }
      filename = 'whitelist.txt';
      mimeType = 'text/plain';
    }

    var blob = new Blob([content], { type: mimeType });
    var url = URL.createObjectURL(blob);
    var a = document.createElement('a');
    a.href = url;
    a.download = filename;
    a.click();
    URL.revokeObjectURL(url);
    
    showToast('Exported ' + filename, 'success');
  }

  // Event listeners
  document.addEventListener('DOMContentLoaded', function() {
    // Botón añadir jugador
    document.getElementById('addPlayerBtn').addEventListener('click', addPlayer);
    
    // Botón bulk import
    document.getElementById('bulkAddBtn').addEventListener('click', bulkAdd);
    
    // Botón limpiar todo
    document.getElementById('clearAllBtn').addEventListener('click', clearAll);
    
    // Botones de exportación
    document.getElementById('exportJson').addEventListener('click', function() { exportData('json'); });
    document.getElementById('exportYaml').addEventListener('click', function() { exportData('yaml'); });
    document.getElementById('exportTxt').addEventListener('click', function() { exportData('txt'); });
    
    // Enter key
    document.getElementById('usernameInput').addEventListener('keypress', function(e) {
      if (e.key === 'Enter') addPlayer();
    });

    // File upload
    document.getElementById('fileInput').addEventListener('change', function(e) {
      var file = e.target.files[0];
      if (file) {
        var reader = new FileReader();
        reader.onload = function(e) {
          document.getElementById('bulkInput').value = e.target.result;
        };
        reader.readAsText(file);
      }
    });

    updateInterface();
  });
</script>

<style>
  .section-spacing {
    @apply py-20 md:py-32;
  }

  .container {
    @apply max-w-7xl mx-auto px-6;
  }
</style>
